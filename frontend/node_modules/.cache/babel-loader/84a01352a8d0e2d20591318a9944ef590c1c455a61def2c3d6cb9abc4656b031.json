{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ashfaque Ahamed\\\\Documents\\\\Ashfaque\\\\ReactJs\\\\pdf-search-with-react\\\\frontend\\\\src\\\\components\\\\PdfViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport * as pdfjsLib from 'pdfjs-dist';\nimport 'pdfjs-dist/web/pdf_viewer.css';\n\n// Set worker source for PDF.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.16.105/pdf.worker.min.js';\nconst PdfViewer = ({\n  filename,\n  keyword\n}) => {\n  _s();\n  useEffect(() => {\n    const renderPdf = async () => {\n      const url = `/pdfs/${filename}`;\n      const loadingTask = pdfjsLib.getDocument(url);\n      const pdf = await loadingTask.promise;\n      const container = document.getElementById('pdf-container');\n      container.innerHTML = ''; // Clear previous PDFs\n\n      for (let pageNum = 1; pageNum <= pdf.numPages; pageNum++) {\n        const page = await pdf.getPage(pageNum);\n        const viewport = page.getViewport({\n          scale: 1.5\n        });\n        const canvas = document.createElement('canvas');\n        const context = canvas.getContext('2d');\n        canvas.width = viewport.width;\n        canvas.height = viewport.height;\n        container.appendChild(canvas);\n        await page.render({\n          canvasContext: context,\n          viewport\n        }).promise;\n\n        // Highlight text after rendering\n        highlightText(page, keyword, viewport, context);\n      }\n    };\n    renderPdf();\n  }, [filename, keyword]);\n  const highlightText = async (page, keyword, viewport, context) => {\n    const textContent = await page.getTextContent();\n    context.globalAlpha = 0.4;\n    context.fillStyle = 'yellow';\n    textContent.items.forEach(item => {\n      if (item.str.toLowerCase().includes(keyword.toLowerCase())) {\n        const [x, y] = item.transform.slice(4, 6);\n        const width = item.width * viewport.scale;\n        const height = Math.abs(item.transform[3]) * viewport.scale;\n        const adjustedY = viewport.height - y * viewport.scale - height;\n        context.fillRect(x * viewport.scale, adjustedY, width, height);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"pdf-container\",\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n};\n_s(PdfViewer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = PdfViewer;\nexport default PdfViewer;\nvar _c;\n$RefreshReg$(_c, \"PdfViewer\");","map":{"version":3,"names":["React","useEffect","pdfjsLib","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","PdfViewer","filename","keyword","_s","renderPdf","url","loadingTask","getDocument","pdf","promise","container","document","getElementById","innerHTML","pageNum","numPages","page","getPage","viewport","getViewport","scale","canvas","createElement","context","getContext","width","height","appendChild","render","canvasContext","highlightText","textContent","getTextContent","globalAlpha","fillStyle","items","forEach","item","str","toLowerCase","includes","x","y","transform","slice","Math","abs","adjustedY","fillRect","id","style","display","flexDirection","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ashfaque Ahamed/Documents/Ashfaque/ReactJs/pdf-search-with-react/frontend/src/components/PdfViewer.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport * as pdfjsLib from 'pdfjs-dist';\r\nimport 'pdfjs-dist/web/pdf_viewer.css';\r\n\r\n// Set worker source for PDF.js\r\npdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.16.105/pdf.worker.min.js';\r\n\r\nconst PdfViewer = ({ filename, keyword }) => {\r\n  useEffect(() => {\r\n    const renderPdf = async () => {\r\n      const url = `/pdfs/${filename}`;\r\n      const loadingTask = pdfjsLib.getDocument(url);\r\n\r\n      const pdf = await loadingTask.promise;\r\n      const container = document.getElementById('pdf-container');\r\n      container.innerHTML = ''; // Clear previous PDFs\r\n\r\n      for (let pageNum = 1; pageNum <= pdf.numPages; pageNum++) {\r\n        const page = await pdf.getPage(pageNum);\r\n        const viewport = page.getViewport({ scale: 1.5 });\r\n\r\n        const canvas = document.createElement('canvas');\r\n        const context = canvas.getContext('2d');\r\n\r\n        canvas.width = viewport.width;\r\n        canvas.height = viewport.height;\r\n\r\n        container.appendChild(canvas);\r\n\r\n        await page.render({\r\n          canvasContext: context,\r\n          viewport,\r\n        }).promise;\r\n\r\n        // Highlight text after rendering\r\n        highlightText(page, keyword, viewport, context);\r\n      }\r\n    };\r\n\r\n    renderPdf();\r\n  }, [filename, keyword]);\r\n\r\n  const highlightText = async (page, keyword, viewport, context) => {\r\n    const textContent = await page.getTextContent();\r\n    context.globalAlpha = 0.4;\r\n    context.fillStyle = 'yellow';\r\n\r\n    textContent.items.forEach((item) => {\r\n      if (item.str.toLowerCase().includes(keyword.toLowerCase())) {\r\n        const [x, y] = item.transform.slice(4, 6);\r\n        const width = item.width * viewport.scale;\r\n        const height = Math.abs(item.transform[3]) * viewport.scale;\r\n\r\n        const adjustedY = viewport.height - y * viewport.scale - height;\r\n        context.fillRect(x * viewport.scale, adjustedY, width, height);\r\n      }\r\n    });\r\n  };\r\n\r\n  return <div id=\"pdf-container\" style={{ display: 'flex', flexDirection: 'column' }} />;\r\n};\r\n\r\nexport default PdfViewer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}